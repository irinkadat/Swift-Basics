import UIKit

/* 1. while рЃфрЃўрЃЎрЃџрЃўрЃА рЃњрЃљрЃЏрЃЮрЃДрЃћрЃюрЃћрЃЉрЃўрЃЌ, 1-рЃЊрЃљрЃю 20-рЃЏрЃЊрЃћ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃћрЃЌ рЃДрЃЋрЃћрЃџрЃљ рЃЎрЃћрЃюрЃбрЃў рЃарЃўрЃфрЃ«рЃЋрЃўрЃА рЃюрЃљрЃЏрЃарЃљрЃЋрЃџрЃў.*/

var n = 1
var product = 1

while n < 20 {
    if n % 2 == 1 {
        product *= n
    }
    n+=1
}
           
print("product of the odd numbes from 1 to 20 is:", product)
    
                
/* 2. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ String рЃбрЃўрЃърЃўрЃА рЃфрЃЋрЃџрЃљрЃЊрЃў рЃЊрЃљ рЃфрЃўрЃЎрЃџрЃўрЃА рЃњрЃљрЃЏрЃЮрЃДрЃћрЃюрЃћрЃЉрЃўрЃЌ рЃерЃћрЃЏрЃЮрЃљрЃЉрЃарЃБрЃюрЃћрЃЌ рЃўрЃА, рЃЏрЃљрЃњ: рЃЌрЃБ рЃњрЃЋрЃљрЃЦрЃЋрЃА РђюTestРђЮ рЃБрЃюрЃЊрЃљ рЃЏрЃўрЃЋрЃўрЃдрЃЮрЃЌ РђюtseTРђЮ */

//­ЪЋ»№ИЈ рЃњрЃќрЃљ рЃърЃўрЃарЃЋрЃћрЃџрЃў

var txt = "test"
var reversedTxt = ""

for i in stride(from: txt.count - 1, through: 0, by: -1) {
    
    let index = txt.index(txt.startIndex, offsetBy: i)
    reversedTxt.append(txt[index])
    
}
print("\(txt) reversed is: \(reversedTxt) ")


//­ЪЋ»№ИЈ рЃњрЃќрЃљ рЃЏрЃћрЃЮрЃарЃћ

//var txt = "test"
//var reversedTxt = ""
//
//for i in txt.reversed() {
//    reversedTxt.append(i)
//}
//
//print("\(txt) reverced is: \(reversedTxt) ")


/* 3. while loop-рЃўрЃАрЃљ рЃЊрЃљ switch statement-рЃўрЃА рЃњрЃљрЃЏрЃЮрЃДрЃћрЃюрЃћрЃЉрЃўрЃЌ рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃБрЃАрЃљрЃАрЃарЃБрЃџрЃЮ рЃерЃБрЃЦрЃюрЃўрЃерЃљрЃюрЃў, рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃЉрЃћрЃГрЃЊрЃљрЃЋрЃА рЃерЃћрЃЏрЃЊрЃћрЃњрЃюрЃљрЃўрЃарЃљрЃЊ. "­Ъћ┤->­ЪїЋ->­ЪЪб->­Ъћ┤->­ЪїЋ..." */

// please save macbook ram РЎ╗№ИЈ :DD

//var lightOrder = 0
//
//while true {
//    switch lightOrder {
//    case 0:
//        print("­Ъћ┤", terminator: "->")
//        lightOrder = 1
//    case 1:
//        print("­ЪЪА", terminator: "->")
//        lightOrder = 2
//    case 2:
//        print("­ЪЪб", terminator: "->")
//        lightOrder = 0
//    default:
//        break
//    }
//}


/* 4. Taylor Swift-рЃўрЃА рЃЎрЃЮрЃюрЃфрЃћрЃарЃбрЃўрЃА рЃЉрЃўрЃџрЃћрЃЌрЃћрЃЉрЃў рЃўрЃДрЃўрЃЊрЃћрЃЉрЃљ, рЃЌрЃБрЃЏрЃфрЃљ рЃарЃљрЃЮрЃЊрЃћрЃюрЃЮрЃЉрЃљ рЃФрЃљрЃџрЃўрЃљрЃю рЃерЃћрЃќрЃдрЃБрЃЊрЃБрЃџрЃўрЃљ. While loop-рЃўрЃА рЃЏрЃћрЃерЃЋрЃћрЃЮрЃЉрЃўрЃЌ рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃЉрЃўрЃџрЃћрЃЌрЃћрЃЉрЃўрЃА рЃњрЃљрЃДрЃўрЃЊрЃЋрЃўрЃА рЃАрЃўрЃЏрЃБрЃџрЃљрЃфрЃўрЃљ рЃЊрЃљ рЃДрЃЮрЃЋрЃћрЃџ рЃњрЃљрЃДрЃўрЃЊрЃБрЃџ рЃЉрЃўрЃџрЃћрЃЌрЃќрЃћ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃћрЃЌ РђюрЃЉрЃўрЃџрЃћрЃЌрЃў рЃњрЃљрЃДрЃўрЃЊрЃБрЃџрЃўрЃљ, рЃЊрЃљрЃарЃЕрЃћрЃюрЃўрЃџрЃўрЃљ рЃЏрЃ«рЃЮрЃџрЃЮрЃЊ X рЃарЃљрЃЮрЃЊрЃћрЃюрЃЮрЃЉрЃљРђЮ, рЃЏрЃљрЃюрЃљрЃЏ рЃАрЃљрЃюрЃљрЃЏ рЃЉрЃўрЃџрЃћрЃЌрЃћрЃЉрЃўрЃА рЃарЃљрЃЮрЃЊрЃћрЃюрЃЮрЃЉрЃљ рЃЏрЃўрЃљрЃдрЃгрЃћрЃЋрЃА 0-рЃА, рЃарЃўрЃА рЃерЃћрЃЏрЃЊрЃћрЃњрЃљрЃф рЃЉрЃћрЃГрЃЊрЃљрЃЋрЃЌ - РђюрЃДрЃЋрЃћрЃџрЃљ рЃЉрЃўрЃџрЃћрЃЌрЃў рЃњрЃљрЃДрЃўрЃЊрЃБрЃџрЃўрЃљ рЃњрЃћрЃџрЃЮрЃЊрЃћрЃЉрЃўрЃЌ рЃЎрЃЮрЃюрЃфрЃћрЃарЃбрЃќрЃћРђЮ */

var ticketCount = 7

while ticketCount > 0 {
    ticketCount -= 1
    
    if ticketCount == 0 {
        print("рЃДрЃЋрЃћрЃџрЃљ рЃЉрЃўрЃџрЃћрЃЌрЃў рЃњрЃљрЃДрЃўрЃЊрЃБрЃџрЃўрЃљ рЃњрЃћрЃџрЃЮрЃЊрЃћрЃЉрЃўрЃЌ рЃЎрЃЮрЃюрЃфрЃћрЃарЃбрЃќрЃћ")
        break
    }
    
    print("рЃЉрЃўрЃџрЃћрЃЌрЃў рЃњрЃљрЃДрЃўрЃЊрЃБрЃџрЃўрЃљ, рЃЊрЃљрЃарЃЕрЃћрЃюрЃўрЃџрЃўрЃљ рЃЏрЃ«рЃЮрЃџрЃЮрЃЊ \(ticketCount)")

}


/* 5. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ array, рЃерЃћрЃљрЃЋрЃАрЃћрЃЌ рЃўрЃАрЃўрЃюрЃў рЃћрЃџрЃћрЃЏрЃћрЃюрЃбрЃћрЃЉрЃўрЃЌ. рЃерЃћрЃљрЃЏрЃЮрЃгрЃЏрЃћрЃЌ рЃЊрЃљ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃћрЃЌ: "array-рЃерЃў рЃДрЃЋрЃћрЃџрЃљ рЃћрЃџрЃћрЃЏрЃћрЃюрЃбрЃў рЃњрЃљрЃюрЃАрЃ«рЃЋрЃљрЃЋрЃћрЃЉрЃБрЃџрЃўрЃљ" рЃљрЃю "array рЃерЃћрЃўрЃфрЃљрЃЋрЃА рЃЏрЃАрЃњрЃљрЃЋрЃА рЃћрЃџрЃћрЃЏрЃћрЃюрЃбрЃћрЃЉрЃА"  (array-рЃА рЃбрЃўрЃърЃА рЃљрЃарЃљрЃЦрЃЋрЃА рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃљ.) */

let arr : [Int] = [1,2,3,4,5,6,6,7] ;
var isIterable = false

for i in 0..<arr.count {
    for j in i+1..<arr.count {
        if arr[i] == arr[j] {
            isIterable = true
            break
        }
    }
    if isIterable {
            break
    }
}

if isIterable {
    print("array рЃерЃћрЃўрЃфрЃљрЃЋрЃА рЃЏрЃАрЃњрЃљрЃЋрЃА рЃћрЃџрЃћрЃЏрЃћрЃюрЃбрЃћрЃЉрЃА")
} else {
    print("array-рЃерЃў рЃДрЃЋрЃћрЃџрЃљ рЃћрЃџрЃћрЃЏрЃћрЃюрЃбрЃў рЃњрЃљрЃюрЃАрЃ«рЃЋрЃљрЃЋрЃћрЃЉрЃБрЃџрЃўрЃљ")
}


/* 6. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃЦрЃџрЃЮрЃЪрЃћрЃарЃў рЃарЃЮрЃЏрЃћрЃџрЃўрЃф рЃњрЃљрЃЏрЃЮрЃўрЃЌрЃЋрЃџрЃўрЃА рЃЮрЃарЃў рЃарЃўрЃфрЃ«рЃЋрЃўрЃА рЃАрЃ«рЃЋрЃљрЃЮрЃЉрЃљрЃА рЃЊрЃљ рЃЊрЃљрЃљрЃЉрЃарЃБрЃюрЃћрЃЉрЃА рЃЏрЃўрЃдрЃћрЃЉрЃБрЃџ рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃљрЃА */

var difference = {(a: Int, b: Int) -> Int in
    return a - b
}
let a = 5
let b = 6
let res = difference(a, b)

print("\(a) - \(b) = \(res)")

/* 7. рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ, рЃарЃЮрЃЏрЃћрЃџрЃАрЃљрЃф рЃњрЃљрЃЊрЃљрЃљрЃгрЃЋрЃЊрЃўрЃЌ String рЃбрЃўрЃърЃўрЃА рЃърЃљрЃарЃљрЃЏрЃћрЃбрЃарЃА. рЃЊрЃљрЃўрЃЌрЃЋрЃљрЃџрЃћрЃЌ рЃљрЃЏ рЃърЃљрЃарЃљрЃЏрЃћрЃбрЃарЃерЃў рЃЌрЃљрЃюрЃ«рЃЏрЃЮрЃЋрЃюрЃћрЃЉрЃўрЃА рЃарЃљрЃЮрЃЊрЃћрЃюрЃЮрЃЉрЃљ рЃЊрЃљ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃћрЃЌ рЃўрЃА.*/

func consonantsCount(txt: String) -> Int {
    let vovels: Set<Character> = ["a", "e", "i", "o", "u"]
    var newTxt = ""
    
    for char in txt.lowercased(){
        
        if char.isLetter && !vovels.contains(char) {
            newTxt.append(char)
        }
    }
    return newTxt.count
}
let numOfConsonants = consonantsCount(txt: "irinka is a cool girl")

print("рЃЌрЃљрЃюрЃ«рЃЏрЃЮрЃЋрЃюрЃћрЃЉрЃўрЃА рЃарЃљрЃЮрЃЊрЃћрЃюрЃЮрЃЉрЃљрЃљ : \(numOfConsonants)")


// MARK: - Oprtional

/* 1. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ рЃЮрЃарЃў Int-рЃћрЃЉрЃўрЃА array, рЃерЃћрЃљрЃЋрЃАрЃћрЃЌ рЃърЃўрЃарЃЋрЃћрЃџрЃў array 8, 4, 9, 9, 0, 2, рЃЊрЃљ рЃЏрЃћрЃЮрЃарЃћ array 1, 0, 9, 2, 3, 7, 0, 1 рЃљрЃЏ рЃарЃўрЃфрЃ«рЃЋрЃћрЃЉрЃўрЃЌ. рЃњрЃљрЃљрЃћрЃарЃЌрЃўрЃљрЃюрЃћрЃЌ рЃћрЃА рЃЮрЃарЃў array рЃћрЃарЃЌ рЃЊрЃљрЃАрЃЮрЃарЃбрЃўрЃџ array-рЃерЃў, рЃљрЃюрЃБ рЃерЃћрЃЊрЃћрЃњрЃў рЃБрЃюрЃЊрЃљ рЃЏрЃўрЃўрЃдрЃЮрЃЌ рЃљрЃАрЃћрЃЌрЃў: 0, 0, 0, 1, 1, 2, 2, 3, 4, 7, 8, 9, 9, рЃљрЃа рЃњрЃљрЃЏрЃЮрЃўрЃДрЃћрЃюрЃЮрЃЌ sorted() рЃљрЃю рЃарЃљрЃўрЃЏрЃћ рЃАрЃ«рЃЋрЃљ рЃБрЃЎрЃЋрЃћ рЃљрЃарЃАрЃћрЃЉрЃБрЃџрЃў рЃЏрЃћрЃЌрЃЮрЃЊрЃў swift-рЃўрЃЊрЃљрЃю. рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃћрЃЌ рЃЏрЃўрЃдрЃћрЃЉрЃБрЃџрЃў рЃЊрЃљрЃАрЃЮрЃарЃбрЃўрЃџрЃў array. */

// рЃАрЃЮрЃарЃбрЃўрЃарЃћрЃЉрЃљ Bubble sort-рЃўрЃЌ

let arr1 = [8, 4, 9, 9, 0, 2]
let arr2 = [1, 0, 9, 2, 3, 7, 0, 1]

var newArr = arr1 + arr2
for i in 0..<newArr.count - 1 {
    for j in 0..<newArr.count - i - 1 {
        if newArr[j] > newArr[j + 1] {
            let temp = newArr[j]
            newArr[j] = newArr[j + 1]
            newArr[j + 1] = temp
        }
    }
}
print(newArr)


//­ЪЋ»№ИЈ рЃерЃћрЃњрЃЋрЃўрЃФрЃџрЃўрЃљ рЃњрЃљрЃЏрЃЮрЃЋрЃўрЃДрЃћрЃюрЃЮрЃЌ swap-рЃўрЃА рЃБрЃцрЃарЃЮ рЃЏрЃљрЃарЃбрЃўрЃЋрЃў рЃЊрЃљ рЃЏрЃЮрЃЎрЃџрЃћ рЃњрЃќрЃљрЃф Like this:
// newArr[j], newArr[j + 1] = newArr[j + 1], newArr[j]



/* 2.  рЃЊрЃљрЃгрЃћрЃарЃћрЃЌ рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ, рЃарЃЮрЃЏрЃћрЃџрЃАрЃљрЃф рЃњрЃљрЃЊрЃљрЃљрЃгрЃЋрЃЊрЃўрЃЌ int рЃбрЃўрЃърЃўрЃА рЃърЃљрЃарЃљрЃЏрЃћрЃбрЃарЃА. рЃњрЃљрЃЏрЃЮрЃўрЃЌрЃЋрЃљрЃџрЃћрЃЌ рЃљрЃЏ рЃърЃљрЃарЃљрЃЏрЃћрЃбрЃарЃўрЃА рЃцрЃљрЃЦрЃбрЃЮрЃарЃўрЃљрЃџрЃў рЃЊрЃљ рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃћрЃЌ */

func calculateFactorial(n : Int) -> Int {
    var factprial = 1
    
    for i in 1...n {
        factprial *= i
    }
    
    return factprial
}
print(calculateFactorial(n: 4))


/* 3. рЃерЃћрЃЦрЃЏрЃћрЃюрЃўрЃЌ Int-рЃћрЃЉрЃўрЃА array, рЃерЃћрЃљрЃЋрЃАрЃћрЃЌ рЃўрЃА 0-рЃўрЃЊрЃљрЃю 10-рЃўрЃА рЃЕрЃљрЃЌрЃЋрЃџрЃўрЃЌ рЃарЃўрЃфрЃ«рЃЋрЃћрЃЉрЃўрЃЌ. loop-рЃўрЃА  рЃњрЃљрЃЏрЃЮрЃДрЃћрЃюрЃћрЃЉрЃўрЃЌ рЃЊрЃљрЃерЃљрЃџрЃћрЃЌ рЃћрЃА array 2 array-рЃўрЃЊ. рЃћрЃарЃЌрЃерЃў рЃњрЃљрЃЊрЃљрЃўрЃбрЃљрЃюрЃћрЃЌ рЃЎрЃћрЃюрЃбрЃў рЃарЃўрЃфрЃ«рЃЋрЃћрЃЉрЃў, рЃЏрЃћрЃЮрЃарЃћрЃерЃў рЃЎрЃў рЃџрЃБрЃгрЃў рЃарЃўрЃфрЃ«рЃЋрЃћрЃЉрЃў, рЃЊрЃљрЃЉрЃћрЃГрЃЊрЃћрЃЌ рЃЮрЃарЃўрЃЋрЃћ рЃЏрЃўрЃдрЃћрЃЉрЃБрЃџрЃў array. */


var arr4 : [Int] = Array(0...10)
var arrOfOdds : [Int] = []
var arrOfEvens : [Int] = []

for i in arr4{
    if i % 2 == 0{
        arrOfEvens.append(i)
    }
    else{
        arrOfOdds.append(i)
    }
}
print(arrOfOdds, arrOfEvens, separator: "\n")

